//
//  AddressViewController.m
//  Elephant
//
//  Created by shen_h on 15/9/16.
//  Copyright (c) 2015年 YZQ. All rights reserved.
//

#import "AddressViewController.h"
#import "UserAddCollectionCell.h"
#import "ElephantCircleLayout.h"
#import <TencentOpenAPI/TencentOAuth.h>
#import <TencentOpenAPI/TencentApiInterface.h>

#import "ElephantVedioController.h"
#import "TestViewController.h"


@interface AddressViewController ()<UICollectionViewDataSource,UICollectionViewDelegate,TencentSessionDelegate,TencentLoginDelegate>

@property (nonatomic, strong) NSMutableArray *images;
@property (nonatomic, strong) UICollectionView *collectionView;
@property (nonatomic, assign) BOOL isChanged;
@property (nonatomic, strong) TencentOAuth *tencentOauth;
@property (nonatomic, strong) NSArray *permissions;
@end

@implementation AddressViewController
static NSString *const ID = @"addimagecell";

//test

- (void)touchesBegan:(NSSet *)touches withEvent:(UIEvent *)event
{
//    ElephantVedioController *vedioCtrl = [[ElephantVedioController alloc] init];
//    [self.navigationController pushViewController:vedioCtrl animated:YES];
    
    
//    _tencentOauth = [[TencentOAuth alloc] initWithAppId:@"1104799057" andDelegate:self];
//    _permissions = [NSArray arrayWithObjects:@"get_user_info",@"get_simple_userinfo", @"add_t", nil];
//    
//    [self performSelector:@selector(qqLogin)];
    
    TestViewController *test = [[TestViewController alloc] init];
    
    [self.navigationController pushViewController:test animated:YES];
}
- (void)qqLogin
{
    NSLog(@"%s",__func__);
    if ([_tencentOauth authorize:_permissions inSafari:NO]) {
        NSLog(@"登录成功");
        [_tencentOauth accessToken];
        [_tencentOauth appId];
    }
}
#pragma tencentSession delegate
/**
 * 登录成功后的回调
 */

- (void)tencentDidLogin
{

    if (_tencentOauth.accessToken && 0 != _tencentOauth.accessToken) {
        // 记录登录用户的OpenID、Token以及过期时间
        [_tencentOauth accessToken];
        [_tencentOauth appId];
    }else {

    }
    
}

/**
 * 登录失败后的回调
 * \param cancelled 代表用户是否主动退出登录
 */
- (void)tencentDidNotLogin:(BOOL)cancelled
{
    
}

/**
 * 登录时网络有问题的回调
 */
- (void)tencentDidNotNetWork
{
    
}

/** open url    */
- (BOOL)application:(UIApplication *)application openURL:(NSURL *)url sourceApplication:(NSString *)sourceApplication annotation:(id)annotation
{
    return [TencentOAuth HandleOpenURL:url];
}
/** handle open url   */
- (BOOL)application:(UIApplication *)application handleOpenURL:(NSURL *)url
{
    return [TencentOAuth HandleOpenURL:url];
}

- (NSMutableArray *)images
{
    if (!_images) {
        _images = [NSMutableArray array];
        for (int i = 1; i <= 20; i ++) {
            NSString *image = [[NSBundle mainBundle] pathForResource:[NSString stringWithFormat:@"%d.jpg",i] ofType:nil];
            [_images addObject:image];
        }
    }
    return _images;
}
- (void)viewDidLoad {
    [super viewDidLoad];
    UICollectionView *collectionView = [[UICollectionView alloc] initWithFrame:CGRectMake(0, 64, self.view.frame.size.width, 200) collectionViewLayout:[[ElephantCircleLayout alloc] init]];
    collectionView.backgroundColor = [UIColor redColor];
    collectionView.delegate = self;
    collectionView.dataSource = self;
    [collectionView registerNib:[UINib nibWithNibName:@"UserAddCollectionCell" bundle:nil] forCellWithReuseIdentifier:ID];
    
    [collectionView addGestureRecognizer:[[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(changeStyle:)]];
    
    UIBarButtonItem *leftButton = [[UIBarButtonItem alloc] initWithTitle:@"Style" style:UIBarButtonItemStylePlain target:self action:@selector(changeImageStyle)];
    self.navigationItem.leftBarButtonItem = leftButton;
    [self.view addSubview:collectionView];
    self.collectionView = collectionView;
    
}
- (void)changeStyle:(UIGestureRecognizer *)gesture
{
    self.collectionView.collectionViewLayout = [[UICollectionViewFlowLayout alloc] init];
    gesture.enabled = NO;
}
- (void)changeImageStyle
{
    if ([self.collectionView.collectionViewLayout isKindOfClass:[ElephantCircleLayout class]]) {
        self.collectionView.collectionViewLayout = [[UICollectionViewFlowLayout alloc] init];
    }else{
        self.collectionView.collectionViewLayout = [[ElephantCircleLayout alloc] init];
    }
}
#pragma mark - collectionview delegate

- (NSInteger)collectionView:(UICollectionView *)collectionView numberOfItemsInSection:(NSInteger)section
{
    NSLog(@"item");
    return self.images.count;
}
- (NSInteger)numberOfSectionsInCollectionView:(UICollectionView *)collectionView
{
    return 1;
}
- (UICollectionViewCell *)collectionView:(UICollectionView *)collectionView cellForItemAtIndexPath:(NSIndexPath *)indexPath
{
    UserAddCollectionCell *cell = [collectionView dequeueReusableCellWithReuseIdentifier:ID forIndexPath:indexPath];
    cell.imageName = self.images[indexPath.item];

    return cell;
}
- (void)collectionView:(UICollectionView *)collectionView didSelectItemAtIndexPath:(NSIndexPath *)indexPath
{
    if ([self.collectionView.collectionViewLayout isKindOfClass:[ElephantCircleLayout class]]) {
        
    }else {
        UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"提示" message:@"删除了联系人" delegate:self cancelButtonTitle:@"我知道了" otherButtonTitles: nil];
        [alert show];
        
        [self.images removeObjectAtIndex:indexPath.item];
        [collectionView deleteItemsAtIndexPaths:@[indexPath]];
        
    }
}

@end
